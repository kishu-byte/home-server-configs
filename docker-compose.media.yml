version: '3.8'

networks:
  homelab:
    external: true
  vpn:
    external: true

services:
  # === MEDIA SERVICES ===
  
  # Plex Media Server
  plex:
    image: plexinc/pms-docker:latest
    container_name: plex
    restart: unless-stopped
    networks:
      - homelab
    environment:
      - TZ=${TZ}
      - PLEX_CLAIM=your-plex-claim-token
      - PLEX_UID=${PUID}
      - PLEX_GID=${PGID}
      - ADVERTISE_IP=https://plex.${DOMAIN}
    volumes:
      - ${CONFIG_ROOT}/plex:/config
      - /tmp/plex-transcode:/transcode
      - ${MOVIES_PATH}:/movies:ro
      - ${TV_PATH}:/tv:ro
      - ${MUSIC_PATH}:/music:ro
    ports:
      - "32400:32400"
    labels:
      - "traefik.enable=true"
      - 'traefik.http.routers.plex.rule=Host("plex.${DOMAIN}")'
      - "traefik.http.routers.plex.tls=true"
      - "traefik.http.routers.plex.tls.certresolver=cloudflare"
      - "traefik.http.services.plex.loadbalancer.server.port=32400"

  # Jellyfin Media Server (Alternative)
  jellyfin:
    image: linuxserver/jellyfin:latest
    container_name: jellyfin
    restart: unless-stopped
    networks:
      - homelab
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_ROOT}/jellyfin:/config
      - ${MOVIES_PATH}:/movies:ro
      - ${TV_PATH}:/tv:ro
      - ${MUSIC_PATH}:/music:ro
    ports:
      - "8096:8096"
    labels:
      - "traefik.enable=true"
      - 'traefik.http.routers.jellyfin.rule=Host("jellyfin.${DOMAIN}")'
      - "traefik.http.routers.jellyfin.tls=true"
      - "traefik.http.routers.jellyfin.tls.certresolver=cloudflare"
      - "traefik.http.services.jellyfin.loadbalancer.server.port=8096"

  # qBittorrent (via VPN)
  qbittorrent:
    image: linuxserver/qbittorrent:latest
    container_name: qbittorrent
    restart: unless-stopped
    network_mode: "service:gluetun"
    depends_on:
      - gluetun
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - WEBUI_PORT=8080
    volumes:
      - ${CONFIG_ROOT}/qbittorrent:/config
      - ${DOWNLOADS_ROOT}:/downloads

  # Sonarr TV Show Management
  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr
    restart: unless-stopped
    networks:
      - homelab
      - vpn
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_ROOT}/sonarr:/config
      - ${TV_PATH}:/tv
      - ${DOWNLOADS_ROOT}:/downloads
    ports:
      - "8989:8989"
    labels:
      - "traefik.enable=true"
      - 'traefik.http.routers.sonarr.rule=Host("sonarr.${DOMAIN}")'
      - "traefik.http.routers.sonarr.tls=true"
      - "traefik.http.routers.sonarr.tls.certresolver=cloudflare"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"

  # Radarr Movie Management
  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    restart: unless-stopped
    networks:
      - homelab
      - vpn
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_ROOT}/radarr:/config
      - ${MOVIES_PATH}:/movies
      - ${DOWNLOADS_ROOT}:/downloads
    ports:
      - "7878:7878"
    labels:
      - "traefik.enable=true"
      - 'traefik.http.routers.radarr.rule=Host("radarr.${DOMAIN}")'
      - "traefik.http.routers.radarr.tls=true"
      - "traefik.http.routers.radarr.tls.certresolver=cloudflare"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"

  # Lidarr Music Management
  lidarr:
    image: linuxserver/lidarr:latest
    container_name: lidarr
    restart: unless-stopped
    networks:
      - homelab
      - vpn
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_ROOT}/lidarr:/config
      - ${MUSIC_PATH}:/music
      - ${DOWNLOADS_ROOT}:/downloads
    ports:
      - "8686:8686"
    labels:
      - "traefik.enable=true"
      - 'traefik.http.routers.lidarr.rule=Host("lidarr.${DOMAIN}")'
      - "traefik.http.routers.lidarr.tls=true"
      - "traefik.http.routers.lidarr.tls.certresolver=cloudflare"
      - "traefik.http.services.lidarr.loadbalancer.server.port=8686"

  # Prowlarr Indexer Management (via VPN)
  prowlarr:
    image: linuxserver/prowlarr:latest
    container_name: prowlarr
    restart: unless-stopped
    network_mode: "service:gluetun"
    depends_on:
      - gluetun
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_ROOT}/prowlarr:/config

  # Bazarr Subtitle Management
  bazarr:
    image: linuxserver/bazarr:latest
    container_name: bazarr
    restart: unless-stopped
    networks:
      - homelab
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_ROOT}/bazarr:/config
      - ${MOVIES_PATH}:/movies
      - ${TV_PATH}:/tv
    ports:
      - "6767:6767"
    labels:
      - "traefik.enable=true"
      - 'traefik.http.routers.bazarr.rule=Host("bazarr.${DOMAIN}")'
      - "traefik.http.routers.bazarr.tls=true"
      - "traefik.http.routers.bazarr.tls.certresolver=cloudflare"
      - "traefik.http.services.bazarr.loadbalancer.server.port=6767"

  # Overseerr Request Management
  overseerr:
    image: sctx/overseerr:latest
    container_name: overseerr
    restart: unless-stopped
    networks:
      - homelab
    environment:
      - LOG_LEVEL=info
      - TZ=${TZ}
    volumes:
      - ${CONFIG_ROOT}/overseerr:/app/config
    ports:
      - "5055:5055"
    labels:
      - "traefik.enable=true"
      - 'traefik.http.routers.overseerr.rule=Host("requests.${DOMAIN}")'
      - "traefik.http.routers.overseerr.tls=true"
      - "traefik.http.routers.overseerr.tls.certresolver=cloudflare"
      - "traefik.http.services.overseerr.loadbalancer.server.port=5055"
