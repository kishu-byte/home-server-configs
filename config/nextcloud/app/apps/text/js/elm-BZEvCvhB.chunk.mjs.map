{"version":3,"file":"elm-BZEvCvhB.chunk.mjs","sources":["../node_modules/highlight.js/lib/languages/elm.js"],"sourcesContent":["/*\nLanguage: Elm\nAuthor: Janis Voigtlaender <janis.voigtlaender@gmail.com>\nWebsite: https://elm-lang.org\nCategory: functional\n*/\n\n/** @type LanguageFn */\nfunction elm(hljs) {\n  const COMMENT = { variants: [\n    hljs.COMMENT('--', '$'),\n    hljs.COMMENT(\n      /\\{-/,\n      /-\\}/,\n      { contains: [ 'self' ] }\n    )\n  ] };\n\n  const CONSTRUCTOR = {\n    className: 'type',\n    begin: '\\\\b[A-Z][\\\\w\\']*', // TODO: other constructors (built-in, infix).\n    relevance: 0\n  };\n\n  const LIST = {\n    begin: '\\\\(',\n    end: '\\\\)',\n    illegal: '\"',\n    contains: [\n      {\n        className: 'type',\n        begin: '\\\\b[A-Z][\\\\w]*(\\\\((\\\\.\\\\.|,|\\\\w+)\\\\))?'\n      },\n      COMMENT\n    ]\n  };\n\n  const RECORD = {\n    begin: /\\{/,\n    end: /\\}/,\n    contains: LIST.contains\n  };\n\n  const CHARACTER = {\n    className: 'string',\n    begin: '\\'\\\\\\\\?.',\n    end: '\\'',\n    illegal: '.'\n  };\n\n  const KEYWORDS = [\n    \"let\",\n    \"in\",\n    \"if\",\n    \"then\",\n    \"else\",\n    \"case\",\n    \"of\",\n    \"where\",\n    \"module\",\n    \"import\",\n    \"exposing\",\n    \"type\",\n    \"alias\",\n    \"as\",\n    \"infix\",\n    \"infixl\",\n    \"infixr\",\n    \"port\",\n    \"effect\",\n    \"command\",\n    \"subscription\"\n  ];\n\n  return {\n    name: 'Elm',\n    keywords: KEYWORDS,\n    contains: [\n\n      // Top-level constructions.\n\n      {\n        beginKeywords: 'port effect module',\n        end: 'exposing',\n        keywords: 'port effect module where command subscription exposing',\n        contains: [\n          LIST,\n          COMMENT\n        ],\n        illegal: '\\\\W\\\\.|;'\n      },\n      {\n        begin: 'import',\n        end: '$',\n        keywords: 'import as exposing',\n        contains: [\n          LIST,\n          COMMENT\n        ],\n        illegal: '\\\\W\\\\.|;'\n      },\n      {\n        begin: 'type',\n        end: '$',\n        keywords: 'type alias',\n        contains: [\n          CONSTRUCTOR,\n          LIST,\n          RECORD,\n          COMMENT\n        ]\n      },\n      {\n        beginKeywords: 'infix infixl infixr',\n        end: '$',\n        contains: [\n          hljs.C_NUMBER_MODE,\n          COMMENT\n        ]\n      },\n      {\n        begin: 'port',\n        end: '$',\n        keywords: 'port',\n        contains: [ COMMENT ]\n      },\n\n      // Literals and names.\n      CHARACTER,\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_NUMBER_MODE,\n      CONSTRUCTOR,\n      hljs.inherit(hljs.TITLE_MODE, { begin: '^[_a-z][\\\\w\\']*' }),\n      COMMENT,\n\n      { // No markup, relevance booster\n        begin: '->|<-' }\n    ],\n    illegal: /;/\n  };\n}\n\nmodule.exports = elm;\n"],"names":["elm","hljs","COMMENT","CONSTRUCTOR","LIST","RECORD","CHARACTER","elm_1"],"mappings":"uCAQA,SAASA,EAAIC,EAAM,CACjB,MAAMC,EAAU,CAAE,SAAU,CAC1BD,EAAK,QAAQ,KAAM,GAAG,EACtBA,EAAK,QACH,MACA,MACA,CAAE,SAAU,CAAE,MAAQ,CAAA,CAC5B,CACA,CAAK,EAEGE,EAAc,CAClB,UAAW,OACX,MAAO,kBACP,UAAW,CACZ,EAEKC,EAAO,CACX,MAAO,MACP,IAAK,MACL,QAAS,IACT,SAAU,CACR,CACE,UAAW,OACX,MAAO,wCACR,EACDF,CACN,CACG,EAEKG,EAAS,CACb,MAAO,KACP,IAAK,KACL,SAAUD,EAAK,QAChB,EAEKE,EAAY,CAChB,UAAW,SACX,MAAO,UACP,IAAK,IACL,QAAS,GACV,EA0BD,MAAO,CACL,KAAM,MACN,SA1Be,CACf,MACA,KACA,KACA,OACA,OACA,OACA,KACA,QACA,SACA,SACA,WACA,OACA,QACA,KACA,QACA,SACA,SACA,OACA,SACA,UACA,cACD,EAKC,SAAU,CAIR,CACE,cAAe,qBACf,IAAK,WACL,SAAU,yDACV,SAAU,CACRF,EACAF,CACD,EACD,QAAS,UACV,EACD,CACE,MAAO,SACP,IAAK,IACL,SAAU,qBACV,SAAU,CACRE,EACAF,CACD,EACD,QAAS,UACV,EACD,CACE,MAAO,OACP,IAAK,IACL,SAAU,aACV,SAAU,CACRC,EACAC,EACAC,EACAH,CACV,CACO,EACD,CACE,cAAe,sBACf,IAAK,IACL,SAAU,CACRD,EAAK,cACLC,CACV,CACO,EACD,CACE,MAAO,OACP,IAAK,IACL,SAAU,OACV,SAAU,CAAEA,CAAO,CACpB,EAGDI,EACAL,EAAK,kBACLA,EAAK,cACLE,EACAF,EAAK,QAAQA,EAAK,WAAY,CAAE,MAAO,iBAAmB,EAC1DC,EAEA,CACE,MAAO,OAAO,CACjB,EACD,QAAS,GACV,CACH,CAEA,OAAAK,EAAiBP","x_google_ignoreList":[0]}