var s,o;function c(){if(o)return s;o=1;function a(n){const e={variants:[n.COMMENT("--","$"),n.COMMENT(/\{-/,/-\}/,{contains:["self"]})]},t={className:"type",begin:"\\b[A-Z][\\w']*",relevance:0},i={begin:"\\(",end:"\\)",illegal:'"',contains:[{className:"type",begin:"\\b[A-Z][\\w]*(\\((\\.\\.|,|\\w+)\\))?"},e]},r={begin:/\{/,end:/\}/,contains:i.contains},l={className:"string",begin:"'\\\\?.",end:"'",illegal:"."};return{name:"Elm",keywords:["let","in","if","then","else","case","of","where","module","import","exposing","type","alias","as","infix","infixl","infixr","port","effect","command","subscription"],contains:[{beginKeywords:"port effect module",end:"exposing",keywords:"port effect module where command subscription exposing",contains:[i,e],illegal:"\\W\\.|;"},{begin:"import",end:"$",keywords:"import as exposing",contains:[i,e],illegal:"\\W\\.|;"},{begin:"type",end:"$",keywords:"type alias",contains:[t,i,r,e]},{beginKeywords:"infix infixl infixr",end:"$",contains:[n.C_NUMBER_MODE,e]},{begin:"port",end:"$",keywords:"port",contains:[e]},l,n.QUOTE_STRING_MODE,n.C_NUMBER_MODE,t,n.inherit(n.TITLE_MODE,{begin:"^[_a-z][\\w']*"}),e,{begin:"->|<-"}],illegal:/;/}}return s=a,s}export{c as r};
//# sourceMappingURL=elm-BZEvCvhB.chunk.mjs.map
